#!/usr/bin/env php
<?php
/**
 *--------------------------------------------------------------------------
 * Данный скрипт - контейнер для запуска в консоли
 *--------------------------------------------------------------------------
 *
 * Это контейнер мастера предоставляющего реализацию некоторого количества полезных команд,
 * отвечающих за настройку, работу и часть сервисных возможностей заглушки.
 *
 */

use App\Console\Kernel;
use Composer\Autoload\ClassLoader;
use Stub\Framework\Main\Application;

define('WIZARD_STUB_START', microtime(true));

/**
 *--------------------------------------------------------------------------
 * Регистрация автозагрузчика / Register The Auto Loader
 *--------------------------------------------------------------------------
 *
 * Регистрация автоматически сгенерированного загрузчика классов предоставленного Composer.
 * Нам просто нужно использовать это, согласно инструкции Https://getcomposer.org/doc/01-basic-usage.md!
 * Здесь подключается автоматически сгенерированный скрипт, для загрузки и пользования классов
 * предоставляемых подключаемыми Composer библиотеками, без дополнительной работы, чтобы нам
 * не пришлось беспокоиться о загрузке любого из наших классов вручную.
 *
 */

/** @var ClassLoader $composer */
$composer = require __DIR__ . '/vendor/autoload.php';
/** @var Application $app */
require_once __DIR__ . '/boiler/app.php';

/**
 *--------------------------------------------------------------------------
 * Run Wizard Application
 *--------------------------------------------------------------------------
 *
 * Когда мы запускаем консольное приложение, текущая команда CLI будет выполнена в этой консоли,
 * а ответ отправлен обратно на терминал или другое устройство вывода для разработчиков.
 * Здесь ничего не происходит!
 *
 */
echo $app->version();
$kernel = new Kernel($app);

/**
 *--------------------------------------------------------------------------
 * Shutdown Wizard Application
 *--------------------------------------------------------------------------
 *
 * Как только Wizard завершит работу, должно запуститься событие завершения работы, чтобы приложение
 * могло выполнить любую окончательную работу до того, как мы завершим процесс.
 * Это последнее, что должно произойти с запросом
 *
 */
$status = "SimpleStub wizard version: app/framework". $app->version();
echo $app->terminate();
exit($status);